流程控制
    JS是一门既面向过程,也是面向对象的解释语言.
    面向过程:按照代码书写的顺序依次执行.(OOP)
    JS也是一门结构性语言.
    JS的结构分为顺序结构、分支(条件/选择)结构和循环结构三种.
    顺序结构:按照代码的书写顺序依次执行,一般包含初始化、赋值、输入/输出等语句.
    分支(条件/选择)结构:用if或switch语句实现,其中的代码的执行是有条件选择执行的.
    循环结构:某部分代码在指定的条件范围内反复执行.用for/for...in/forEach/while/do...while语句实现

2)循环结构
    I)循环
        a.计数循环(for)
            语法:
                for([变量初始值];[条件];[步长]{
                    [循环体;]
                    [continue;]
                    [break;]
                }

            说明:
                先执行变量初始值,再判断条件,如果条件成立,再执行循环体,再计算步长,
                最后再判断条件,条件成立,继续执行循环体...直到条件不成立,跳出循环体为止

                该循环的次数是可以计算出来的:
                    循环次数=[(终值-初值) / 步长] + 1

            双重for循环(套娃):
                语法:
                    for([变量初始值];[条件];[步长]{
                        for([变量初始值];[条件];[步长]{
                            [循环体;]
                            [continue;]
                            [break;]
                        }
                        [continue;]
                        [break;]
                    }
                外层循环一次,内层for循环全部执行

for循环小结(偷ppt)
    for循环可以重复执行某些相同代码
    for循环可以重复执行些许不同的代码,因为我们有计数器
    for循环可以重复执行某些操作,比如算术运算符加法操作
    随着需求增加,双重for循环可以做更多、更好看的效果
    双重for循环,外层循环一次,内层for循环全部执行
    for循环是循环条件和数字直接相关的循环
    分析要比写代码更重要
    一些核心算法想不到,但是要学会,分析它的执行过程
    举一反三,做一些相似的案例

        b.当型循环(while)
            语法:
                while(条件){
                    [循环体;]
                    [continue;]
                    [break;]
                }

            说明:当条件成立时,执行循环体,反之则跳出循环.

        c.直到型循环(do..while)
            语法:
                do[
                    [循环体;]
                    [continue;]
                    [break;]
                ] while(条件)

            说明:
                先执行循环体,再判断条件,如果条件成立,继续循环,反之则跳出循环

                直到型循环与当型循环的区别:
                    当条件1次都不成立时,直到型循环至少会执行一次循环,而当型循环1次也不执行.

        d.数组和对象遍历(后面讲)
            for...in
            forEach()

            小结:
                而while和do...while可以用在循环次数已知或未知的情况.
            一般循环次数已知用for较多;for...in用于遍历数组和对象;forEach()用于遍历数组.
            for循环也可以遍历数组,但性能较差.

    II)break和continue语句
        break语句可以用在switch语句和循环语句中(forEach循环除外),表示跳出(结束)情况语句或循环.
        continue语句只能用在循环语句中(forEach循环除外),表示结束本次循环,继续下一次循环.

        注意:
            a)break和continue语句必须单独存在,后面不能添加其他代码.
            b)break和continue语句一般放在if语句中.

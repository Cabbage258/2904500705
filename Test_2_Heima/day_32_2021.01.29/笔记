JavaScript高级
    1,编程思想:
        a)面向过程编程 POP(Process-oriented programming)
            面向过程就是分析出解决问题所需要的步骤,然后用函数把这些步骤一步一步实现,使用的时候再一个一个的依次调用就可以了

        b)面向对象编程 OOP(Object Oriented Programming)
            面向对象是把事务分解为一个个对象,然后由对象之间分工与合作.
             · 找出对象,列出对象的功能
             · 使用这些对象的功能解决问题
            在ES6中,提供了了新的方式去书写面向对象编程,这种方式更加接近面向对象的书写方式,但本身只是一种语法糖.

            面向对象编程是利用类和对象变成的一种思想.
            万物可归类,类是对于世界事物的高度抽象,不同的事物之间有不同的关系,一个类自身与外界的封装关系,一个父类和子类的继承关系,一个类和多个类的多态关系.
            万物皆对象,对象是具体的世界事物.
            面向对象的三大特征:
                i)封装
                    我们平时所用的方法和类都是一种封装,当我们在项目开发中,遇到一段功能的代码在好多地方重复使用的时候,
                    我们可以把它单独封装成一个功能的方法,这样在我们需要使用的地方直接调用就可以了.
                ii)继承
                    继承在我们的项目开发中主要使用为子类继承父类.
                    继承会继承父类的实例属性和实例方法,并不会继承静态属性和静态方法,并且静态方法只能通过类名去调用
                iii)多态
                    多态的具体表现为方法重载和方法重写
                        方法重载:
                            重载是指不同的函数使用相同的函数名,但是函数的参数个数或类型不同,调用的时候根据函数的参数来区别不同的函数
                        方法重写:
                            重写(覆盖)是指在派生类中重新对基类中的虚函数重新实现,即函数名和参数都一样,只是函数的实现体不一样.

            三大特征的优点:
                封装
                    封装的优势在于定义只可以在类内部进行对属性的操作,外部无法对这些属性修改,想要修改,也只能通过你定义的封装方法.
                继承
                    继承减少了代码的冗余,省略了很多重复代码,开发者可以从父类底层定义所有子类必须有的属性和方法,以达到耦合的目的.
                多态
                    多态实现了方法的个性化,不同的子类根据具体状况可以实现不同的方法,光有父类定义的方法不够灵活,遇见特殊状况就捉襟见肘了.

        面向过程与面向对象相比:
            面向过程优点:性能比面向对象高,适合跟硬件联系很紧密的东西,例如单片机就采用的面向过程编程
                  缺点:没有面向对象易维护、易复用、易扩展
            面向对象优点:易维护、易复用、易扩展,由于面向对象有封装、继承、多态性的特性,可以设计出低耦合的系统,使系统更加灵活、更加易于维护
                  缺点:性能比面向过程低

    2.
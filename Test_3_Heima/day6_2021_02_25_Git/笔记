git
    https://docs.github.com/cn/github
    几个专用名词译名:
        workspace:      工作区
        index / stage:  暂存区
        repository:     仓库区(或本地仓库)
        remote:         远程仓库
    1.新建代码库
        当前目录下新建一个git代码库
            git init
        新建一个目录,将其初始化为git代码库
            git init [项目名称]
        下载一个项目和它的整个代码历史
            git clone [url]
    2.配置
        git的配置文件为,gitconfig,在C:\Users\CB_CaBbage\.gitconfig,也可以在项目目录下...\.git\config
            显示当前的git配置
                git config --list
            编辑git配置文件
                git config -e [--global]
            设置提交代码时的用户信息
                git config [--global] user.name "[名字]"
                git config [--global] user.email "[邮箱]"
    3.增加/删除文件
        添加指定文件到暂存区
            git add [文件1] [文件2] ...
        添加指定目录到暂存区,包括子目录
            git add [目录]
        添加当前目录的所有文件到暂存区
            git add .
        添加每个变化前,都会要求确认,对于同一个文件的多处变化,可以实现分次提交
            git add -p
        删除工作区文件,并且将这次删除放入暂存区
            git rm [文件1] [文件2] ...
        停止追踪指定文件,但该文件会保留在工作区
            git rm --cached [文件]
        改名文件,并且将这个改名放入暂存区
            git mv [原名文件] [改名文件]
    4.代码提交
        提交暂存区到仓库区
            git commit -m [说明]
        提交暂存区的指定文件到仓库区
            git commit [文件1] [文件2] ... -m [说明]
        提交工作区自上次commit之后的变化,直接到仓库区
            git commit -a
        提交时显示所有diff信息
            git commit -v
        使用一次新的commit,替代上一次提交(如果代码没有任何变化,则用来改写上一次commit的提交信息)
            git commit --amend -m [说明]
        重做上一次commit,并包括指定文件的新变化
            git commit --amend [文件1] [文件2] ...
    5.分支
        列出所有本地分支
            git branch
        列出所有远程分支
            git branch -r
        列出所有本地分支和远程分支
            git branch -a
        新建一个分支,但仍然停留在当前分支
            git branch [分支名称]
        新建一个分支,并切换到该分支
            git branch -b [分支]
        新建一个分支,指向指定commit
            git branch [分支] [指定commit]
        新建一个分支,与指定的远程分支建立追踪关系
            git branch --track [分支] [远程仓库-分支]
        切换到指定分支,并更新工作区
            git checkout [分支名称]
        切换到上一个分支
            git checkout ~
        建立追踪关系,在现有分支与指定的远程分支之间
            git branch --set-upstream [分支] [远程-分支]
        合并指定分支到当前分支
            git merge [分支]
        选择一个commit,合并进当前分支
            git cherry-pick [commit]
        删除分支
            git branch -d [分支名称]
        删除远程分支
            git push origin --delete [分支名]
            git branch -dr [远程仓库/分支名]
    6.标签
        列出所有tag
            git tag
        新建一个tag在当前commit
            git tag [标签]
        新建一个tag在指定commit上
            git tag [标签] [commit]
        删除本地tag
            git tag -d [标签]
        删除远程tag
            git push origin :refs/tags/[标签名]
        查看tag信息
            git show [标签]
        提交指定tag
            git push [远程仓库] [标签]
        提交所有tag
            git push [远程仓库] --tags
        新建一个分支,指向某个tag
            git checkout -b [分支] [标签]
    7.查看信息
        显示有变更的文件
            git status
        显示当前分支的版本历史
            git log
        显示commit历史,以及每次commit发生变更的文件
            git log --stat
        搜索提交历史,根据关键词
            git log -S [密码]
        显示某个commit之后的所有变动,每个commit占据一行
            git log [标签] HEAD --pretty=format:%s
        显示某个文件之前的版本历史,

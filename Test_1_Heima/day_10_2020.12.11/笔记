HTML5
    1.HTML5由W3C和WHAT组织机构共同研发出来的,于2014年正式发布.
    2.HTML5成为了新一代网页开发标准
    3.HTML5新特性(面试)
        1)增加了audio和video音频视频播放,抛弃了flash
        2)新增了canvas画布(绘画,制作动画(如小游戏开发等))
        3)地理定位
        4)增加了离线缓存
        5)硬件加速
        6)Web Socket(全双工通信)
        7)增加了本地存储
        8)新增了一些语义化标签

            Tips:
                i)这种语义化标准主要是针对搜索引擎的
                ii)这些新标签页面中可以使用多次
                iii)在IE9中,需要把这些元素转换为块级元素
                iv)移动端大量使用
    4.网页布局标签
        header:页首
        nav:导航栏
        aside:侧边栏
        main:主体
        section:区块
        article:文章
        footer:页尾
    5.语义化标签
        1)mark:高亮显示(行级)
        2)details(描述)与summary(摘要):一般用于名词解释或用于封装一个区块等
        3)meter:定义度量衡
            属性value/min/max
        4)progress:进度条
            属性:value/min/max
        5)dialog:对话框或窗口
        6)figure:用于对元素进行组合,(一般用来组合一张图的标题、图片和图片描述等)
    6.HTML5多媒体
        1)audio
            播放音乐或音频.IE9以下的版本不支持.
                a)支持的格式
                    .mp3(优先,兼容性好)/.ogg/.wav
                b)属性
                    src:文件路径
                    autoplay:自动播放(Chrome无效)
                    loop:循环
                    controls:控制条
                    muted:静音
                    preload:预加载(当使用autoplay时,preload自动失效)
        2)video
            加载视频.IE9以下的版本不支持.
                a)支持的格式
                    .mp4(优先,兼容性好)/.ogg/.webm
                b)属性
                    src:文件路径
                    autoplay:自动播放
                    loop:循环
                    controls:控制条
                    muted:静音(Chrome需要添加该属性解决自动播放问题)
                    preload:预加载(当使用autoplay时,preload自动失效)
                    width:宽度
                    height:高度
                    poster:封面海报
        3)embed:
            嵌入内容或加载插件
                属性:
                    src:文件路径
                    width:宽度
                    height:高度
                    type:类型
        4)canvas
            画布.是一个容器元素.
            注意
                a.单独使用canvas没有什么意义,它必须结合JavaScript使用.它的具体功能体现是通过JavaScript体现来的
                b.canvas的宽高最好不要通过css实现,而是直接使用标签属性width和height实现.
    7.HTML5常用属性
        1)contentEditable:
            将标签转换为可编辑状态,可用于所有标签,它的值有true/false.
        2)hidden:
            对元素隐藏,一般用来传值或当某个条件成立时,执行内容显示,默认值为hidden.
        3)data-*:
            用于存储页面或应用程序的私有自定义数据,一般用于传值.
        4)multiple:
            规定输入域中可选择多个内容,用于表单组件中,如file/select.
        5)required:
            约束表单元素在提交前必须输入值.用于表单组件中,需要结合提交按钮使用
        6)pattern:
            用于验证输入字段的模式,用于表单组件中,需要结合提交按钮使用.
    8.表单组件
        1)color:颜色
        2)email:邮箱
        3)tel:电话号码
        4)url:网址
        5)number:输入数字
        6)range:范围
        7)search:搜索
        8)date:日期
        9)datetime:日期时间
        10)datetime-logo:本地日期时间
        11)year:年份
        12)month:月份
        13)time:时间
    9.表单属性
        1)formaction:修改action(数据提交的地方)
        2)formenctype:修改表单请求的类型
        3)formmethod:修改数据提交的方法
        4)form:设置表单元素属于哪一个表单
        5)novalidate:不验证
    10.input属性
        1)autocomplete:自动完成
            用来帮助用户输入,每一次输入的内容,浏览器是否保存输入的值,以备将来使用.值有:
                on(默认)/off
            为了保护敏感数据(如用户账号、密码等),避免本地浏览器对他们不安全存储,一般需要关闭.
        2)autofocus:自动获焦
        3)step:步长
        4)mutiple:可以多选文件提交
        5)perttern:正则匹配
        6)placeholder:输入提示
            /*placeholder颜色*/
            input::placeholder{
                color:;
            }
        7)required:必须输入

CSS3新增属性选择器
    1.CSS3是CSS2.1的一个升级.它是对CSS的一个扩展
    2.CSS3的主要新特性
        1)选择器
        2)阴影
        3)形状转换(2D<->3D)
        4)变形
        5)动画(过渡动画、帧动画)
        6)边框
        7)多重背景
        8)反射
        9)文字
        10)颜色(rgba/hsl/hsla)
        11)滤镜(filter)
        12)弹性布局
        13)多列布局
        14)盒模型
        15)Web字体
        16)媒体查询
    3.CSS3不是所有浏览器或同一浏览器的不同版本都支持,所以需要做兼容处理
        1)主流浏览器内核(面试)
            a)Trident:IE内核
            b)Webkit:Chrome和Safari内核
            c)Gecko:FireFox内核
            d)Blink(是Webkit的一个分支):Chrome和Opera内核

            Tips:目前国内的浏览器大多数都是双核的(IE内核+Chrome内核)
        2)厂商前缀
            IE:-ms-
            Chrome和Safari:-webkit-
            FireFox:-moz-
            Opera:-o-
    4.CSS3选择器
        丰富选择的目的,减少class和id属性的使用
        1)属性选择器(权重10)
            元素A[属性名B]:选择具有B属性的元素A
            元素A[属性名B="C"]:选择具有B属性且属性值等于C的元素A
            元素A[属性名B^="C"]:匹配具有B属性且值以C开头的元素A
            元素A[属性名B$="C"]:匹配具有B属性且值以C结尾的元素A
            元素A[属性名B*="C"]:匹配具有B属性且值中含有C的元素A
        2)结构性伪类
            B:root                                  匹配文档的根元素.在HTML中,根元素永远是HTML
            B:first-child                           匹配父元素中的第一个B元素
            B:last-child                            匹配父元素中最后一个B元素
            B:nth-child(n)                          匹配父元素中的第n个子元素B
            B:nth-last-child(n)                     匹配父元素中的倒数第n个结构子元素B
            B:nth-of-type(n)                        匹配同类型中的第n个同级兄弟元素B
            B:nth-last-of-type(n)                   匹配同类型中的倒数第n个同级兄弟元素B
            B:only-child                            匹配属于父元素中唯一子元素的B
            B:only-of-type                          匹配属于同类型中唯一兄弟元素的B
            B:empty                                 匹配没有任何子元素(包括text节点)的元素E

            Tips:(如果n是公式,从0开始计算,但是第0个元素或超出了元素的个数会被忽略)
                例: 2n偶数
                    2n+1奇数
                    5n
                    n+5从第5个开始(包含第5个)到最后
                    -n+5前五个(包含第五个)
        3)目标伪类
            B:target                                  匹配相关URL指向的B元素
        4)UI元素状态伪类
            B:checked(只在Opera浏览器中有效)           匹配所有用户界面(form表单)中处于选中状态的元素B
            B:disabled                                匹配所有用户界面(form表单)中处于不可用状态的B元素
            B:enabled                                 匹配所有用户界面(form表单)中处于可用状态的B元素
            B::selection                              匹配B元素中被用户选中处于高亮状态的部分
        5)否定伪类
            B:not(s)                                  匹配所有不匹配简单选择符s的元素B
        6)通用兄弟元素选择器
            A~B                                       匹配A元素之后的B元素
    5.CSS伪元素
        1)伪元素与伪类的区别:
            CSS引入伪类和伪元素概念是为了格式化文档树以外的信息,也就是说伪类和伪元素是用来修饰不在文档树中的部分.

            伪类用于当已有元素处于的某个状态时,为其添加对应的样式,这个状态是根据用户行为而动态变化的.它只有处于dom树无法描述的状态下才能为元素添加样式,所以将其称为伪类.

            伪元素用于创建一些不在文档树中的元素,并为其添加样式.比如说,我们可以通过:Before来在一个元素前增加一些文本,并为这些文本添加样式.虽然用户可以看到这些文本,但是这些文本实际上不在文档树中.

        2)伪元素&伪类的特点:
            伪元素和伪类都不会出现在源文档或者文档树中
            伪类允许出现在选择器的任何位置,而一个伪元素只能跟在选择器的最后一个简单选择器后面
            伪元素和伪类名都是大小写不敏感的
            有些伪类是互斥的,而其他的可以同时用在一个元素上.(在规则冲突的情况下,常规层叠顺序决定结果).
        3):before/:after/:first-letter/:first-line
            前面可以是一个冒号也可以是双冒号
          ::selection/::placeholder/::backdrop
            前面只能是双冒号
            Tips:
                必须给content.可以走空加背景图,但要给宽高
    6.CSS3文本
        1)文本阴影(主流浏览器都支持)
            text-shadow:水平偏移 垂直偏移 模糊度 阴影颜色;
        2)文本自动换行(主流浏览器都支持)
            word-wrap:normal|break-word
        3)单词拆分(主流浏览器都支持)
            word-break:normal|break-all|keep-all;
        4)文本拆分(所有主流浏览器都不支持(可以忽略))
            text-wrap:normal|none|unrestricted|suppress;
        5)文本溢出
            a)单行文本溢出(重要)
                text-overflow: clip|ellipsis|string;

                处理文字溢出样式:
                    width: px/%/em/rem...;
                    white-space:nowrap;/*不允许折行*/
                    -ms-text-overflow:ellipsis;/*处理IE兼容*/
                    text-overflow:ellipsis;
                    overflow:hidden;
            
            b)多行文本溢出(IE9以下的版本不支持,主要是谷歌支持)
                display-webkit-box;
                -webkit-box-orient:vertical;
                -webkit-line-clamp:行数;
                overflow:hidden;
    7.CSS3边框
        1)圆角边框(掌握)
            border-radius: 1-4 length|% / 1-4 length|%;

            四个方位的词:top-left/top-right/bottom-left/bottom-right
        2)边框阴影(IE9以上支持)
            box-shadow:水平偏移距离 垂直偏移距离 [模糊距离] [阴影的尺寸] [颜色] [inset]
        3)边框图片(IE11.0以后的版本支持)
            border-image:图片 向内偏移距离 宽度 图像区域超出边框的距离 重复效果;

            重复效果:round/stretch/repeat
    8.CSS3背景
        1)多重背景
            background:背景色 背景图片 平铺方式 位置,背景色 背景图片 平铺方式 位置,......
        2)background-size:设定背景图像的尺寸.
            background-size:固定长度:百分比值|cover|contain;
        3)background-origin:属性制定了背景图像的位置区域.
            background-origin: padding-box|border-box|content-box;
        4)background-clip:设定背景的绘制区域
            background-clip: border-box|padding-box|content-box
        5)渐变背景
            background-image: 线性渐变|径向渐变
    9.CSS3颜色
        1)RGBA
            rgba(r,g,b,a)
            r:红色          取值范围:0-255/0-100%
            g:绿色          取值范围:0-255/0-100%
            b:蓝色          取值范围:0-255/0-100%
            a:不透明度       取值范围:0-1的一个小数
        2)HSL
            hsl(h,s,l)
            h:色调           取值范围:0-360
            s:饱和度         取值范围:0-100%
            l:亮度           取值范围:0-100%
            
        3)HSLA
            hsl(h,s,l,a)
            h:色调           取值范围:0-360
            s:饱和度         取值范围:0-100%
            l:亮度           取值范围:0-100%
            a:不透明度       取值范围:0-1的一个小数
    10.opacity
        调整元素的不透明度,大多数情况下用于做元素的遮罩效果,取值范围:0-1的一个小数
        IE8及8以下版本不支持opacity.处理兼容的方式,再添加一行代码来处理不透明度
            filter:alpha(opacity=数值)          数值的范围:0-100
    11.CSS3渐变
        渐变主要用来设置背景或制作三维图.
        1)线性渐变
            background: line-gradient(方向或角度,颜色1 百分比,颜色2 百分比,...);
            方向:
                to left:从右向左渐变
                to right:从左向右渐变
                to top:从下向上渐变
                to bottom:从上向下渐变
                to top left:从右下角向左上角渐变
                to top right:从左下角向右上角渐变
                to bottom left:从右上角向左下角渐变
                to bottom right:从左上角向右下角渐变
            角度:
                比如45度角,应该表示为: 45deg
            颜色取值:
                1)表示颜色的单词
                2)16进制颜色
                3)表示颜色的函数(rgb()/rgba()/hsl()/hsla()/...)
        2)径向渐变
            background: radial-gradient(形状 渐变大小 at 位置,颜色1 百分比,...,颜色n 百分比);

            形状:
                ellipse:椭圆径向渐变(默认值)
                circle:圆径向渐变
            渐变大小:
                farthest-corner:渐变的半径长度为从圆心到圆心最远的角(默认)
                closest-side:渐变的半径长度为从圆心到离圆心最近的边
                closest-color:渐变的半径长度为从圆心到圆心最近的角
                farthest-side:渐变的半径长度为从圆心到离圆心最远的边
            位置:
                center:设置圆心在中心位置(默认值)
                top:设置圆心在顶部位置
                bottom:设置圆心在底端位置
                at 圆心横坐标 圆心纵坐标: 设定与圆心的位置在指定的(横坐标,纵坐标)处
        3)文字渐变
            background-image:线性渐变或径向渐变;
            -webkit-background-clip:text;
            -webkit-text-fill-color:transparent;
    12.box-sizing
        允许你以某种方式定义某些元素,以适应指定的区域.
        box-sizing: content-box/border-box (火狐需要写厂商前缀)

    13.变形(transform)
        translate(x,y) 定义2D转换,沿着x轴和y轴移动元素.                      位移效果
        translateX(n)   定义2D转换,沿着x轴移动元素.
        translateY(n)   定义2D转换,沿着y轴移动元素.

        scale(x,y)     定义2D缩放转换,改变元素的宽度和高度.                   缩放效果
        scaleX(n)       定义2D缩放转换,改变元素的宽度.
        scaleY(n)       定义2D缩放转换,改变元素的高度.

        rotate(angle)  定义2D旋转,在参数中规定角度.(-360deg,360deg)(deg角度)   旋转效果

        skew(x-angle,y-angle) 定义2D倾斜旋转,沿着x和y轴.                     变形效果
        skewX(angle)    定义2D倾斜旋转,沿着x轴.
        skewY(angle)    定义2D倾斜旋转,沿着y轴.

        matrix(a,b,c,d,e,f)                 fk矩阵
    14.transform-origin:调整元素的基点
        transform-origin:x-axis y-axis z-axis:
            属性值:
                x-axis:定义视图被置于x轴的何处.可能的值:left,center,right,length,%.
                y-axis:定义视图被置于y轴的何处.可能的值:left,center,bottom,length,%.
                z-axis:定义视图被置于z轴的何处.可能的值:length.
    15.perspective
        让子元素获取透视效果.
            perspective:length|none;

            主流浏览器都不支持,谷歌要加-webkit-,或者在长度后面加单位.
    16.transform-style
        在3D空间中呈现被嵌套的元素.(该属性必须与transform属性一同使用).

        transform-style: flat|preserve-3d;
    17.rotateZ 
        沿着z轴的方向顺时针旋转

    18.transition过渡动画
        1)常规用法:
            transition-property
            transition-duration
            transition-timing-function
            transition-delay
        2)简洁(复合)用法:
            transition:property-name-list|all duration timing-function felay;

            a)要过渡的属性,可以使用的属性有:
                i)颜色:
                    color background-color border-color outline-color
                ii)位置:
                    background-position left right top bottom
                iii)长度:
                    max-height min-height max-width min-width height width
                    border-width margin padding outline-width outline-offset
                    font-size line-height text-indent vertical-aline
                    border-spacing letter-spacing word-spacing
                iv)数字:
                    opacity visibility z-index font-weight zoom
                v)组合:
                    text-shadow transform box-shadow clip
                vi)其他:
                    gradient
                all:全部属性过度
            b)duration:动画持续时间,一般以秒(s)或毫秒(ms)为单位
            c)timing-function:动画函数
                i)linear:匀速
                ii)ease:变速(先慢后快,最后再慢)
                iii)ease-in:变速(由慢到快)
                iv)ease-out:变速(由快到慢)
                v)ease-in-out:变速(慢速开始,满速结束)
                vi)cubic-bezier(n,n,n,n):自行设定变速,n的值在0-1之间
            d)delay:动画延时时间,一般以秒(s)或毫秒(ms)为单位
    19.关键帧动画
        步骤:
            1)设置关键帧
                a)如果只有两个关键帧:
                    @keyframes 动画名称{
                        0%:{样式表}
                        100%:{样式表}
                    }
                    或:
                    @keyframes 动画名称{
                        from:{样式表}
                        to:{样式表}
                    }
                b)如果是多个关键帧:
                    @keyframes 动画名称{
                        0%:{样式表}
                        25%:{样式表}
                        60%:{样式表}
                        ...
                        100%:{样式表}
                    }
                    注意:这里的百分比一般是升序值,可以使0%-100%之间的任意值.也可以是倒序
            2)实施动画
                a)常规用法
                    animation-name:来自于@keyframes定义的动画名
                    animation-duration:动画持续时间,一般以秒(s)或好毛(ms)为单位(默认为0)
                    animation-timing-function:动画函数
                        i)linear:匀速(默认值)
                        ii)ease:变速(先慢后快,最后再慢)
                        iii)ease-in:变速(由慢到快)
                        iv)ease-out:变速(由快到慢)
                        v)ease-in-out:变速(慢速开始,慢速结束)
                        vi)cubic-bezier(n,n,n,n):自行设定变速,n的值在0-1之间
                    animation-delay:动画延时时间,一般以秒(s)或毫秒(ms)为单位
                    animation-iteration-count:动画循环的次数
                        1)number:按设定次数循环(默认次数为1次)
                        2)infinite:一直循环播放
                    animation-direction:动画播放完后是否反向播放
                        1)normal:不反向(默认值)
                        2)alternate:反向
                    animation-play-state:动画播放或停止播放
                        1)paused:停止播放
                        2)running:播放(默认值)
                    animation-play-state
                b)简洁用法
                    animation:动画名 动画持续时间 动画函数 动画延时时间 动画循环的次数 动画播放完后是否反向播放
    20.多列(分栏)
        1)column-count 规定元素应该被分隔的列数(栏数)
            column-count:number | auto;
        2)column-gap 设置栏间距.
            column-gap:length | normal(默认值)
        3)column-rule 设置栏间分隔线.
            a)column-rule-style:设置线型.
                none 没有分割线
                hidden 隐藏线
                dotted 点线
                dashed 虚线
                solid 实线
                double 双线
                groove 3D沟槽效果
                ridge 3D脊状效果
                inset 3D左上角阴影效果
                outset 3D 右下角阴影效果

                注意:
                    3D线型在分栏中没有效果,当实线处理了.
            b)column-rule-width:设置线宽.
            c)column-rule-color:设置分割线颜色.

            简洁(复合)写法
                column-rule:width style color;
        4)column-width 设置栏宽
            column-width: length | auto;
        5)columns: 是column-width 和 column-count 的简写方式    
            columns:width count;

    21.flex弹性布局
        CSS3 弹性盒(Flexible Box 或 flexbox),是一种当页面需要适应不同的屏幕大小以及设备类型时确保元素拥有恰当的行为的布局方式.
        引入弹性盒布局模型的目的是提供一种更加有效的方式来对一个容器中的子元素进行排列、对齐和分配空白空间.

        常用的属性:
            1)flex-direction(应用于父元素)
                flex-direction 指定子元素在父容器中的位置.
                语法:
                flex-direction: row | row-reverse | column | column-reverse
                参数:
                    row:横向从左到右排列(左对齐),默认的排列方式
                    row-revers:反转横向排列(右对齐,从后往前排,最后一项排在最前面)
                    column:纵向排列
                    column-reverse:反转纵向排列,从后往前排,最后一项排在最上面.
            2)justify-content(应用于父元素)
                把弹性项沿着弹性容器的主轴线对齐

                语法:
                    justify-content:flex-start | flex-end | center | space-between | space-around

                参数:
                    flex-start:紧凑方式左对齐(默认值)
                    flex-end:紧凑方式右对齐
                    center:紧凑方式居中对齐
                (重要)space-between:除了第1个和最后1个子元素外,其他子元素等分空白区域
                (重要)space-around:所有子元素等分空白区域
            3)align-items(应用于父元素)
                子元素在侧轴(纵轴)方向上的对齐方式.此属性作用于父容器

                语法:
                    align-items:flex-start | flex-end | center | baseline | stretch

                参数:
                    flex-start:沿纵轴顶端对齐(默认值)
                    flex-end:沿纵轴底端对齐
                    center:沿纵轴垂直居中对齐
                    baseline:沿纵轴基线对齐
                    stretch:纵向拉伸对齐
            4)flex-grow(应用于子元素)
                子元素的放大比例,默认为0,即如果存在剩余空间,也不放大.此属性作用于子元素.
                语法:
                    flex-grow:number;
            5)flex
                用于指定弹性子元素空间分配
                语法:
                    flex:auto | initial | none | inherit | [flex-grow] | [flex-shrink] | [flex-basis]
                参数:
                    auto:等价于 1 1 auto
                    initial:等价于 0 1 auto
                    none:等价于 0 0 auto
                    inherit:从父元素继承

                Tips:
                    flex可以带1-3个参数.
                    1)带1个参数 
                        a)无单位,这个数值会被当做flex-grow(放大)的值
                        b)带单位,这个数值会被当作flex-basis(基本宽度)的值
                        c)auto(自动宽度) | initial(初始宽度) | none(无)
                    2)带2个参数 
                        第1个参数必须是一个无单位的数值,它会被当作flex-grow的值.
                        第2个参数:
                            a)无单位,这个数值会被当作flex-shrink(收缩比率)的值
                            b)带单位,这个数值会被当作flex-basis(基本宽度)的值
                    3)带3个参数 
                        第1个参数必须是一个无单位的值,它会被当作flex-grow的值
                        第2个参数也必须是一个无单位的数值,它会被当作flex-shrink(收缩比率)的值
                        第3个参数必须是一个有效的宽度值(带单位),它会被当作flex-basis(默认基准宽度值)的值
    22.响应式布局
        1)响应式布局的概念
            Responsive Design:在实现不同屏幕分辨率的终端上浏览网页的不同展示方式.通过响应式设计能使网站在
                              手机和平板电脑上有更好的浏览阅读体验
        2)响应式布局和自适应布局的区别(面试)
            响应式布局之开发一套代码,通过检测视口的分辨率,针对不同客户端在客户端做代码处理,来展现不同的布局和内容
            自适应需要开发多套界面,通过检测视口分辨率,来判断当前访问的设备是PC端、平板、手机等,从而请求服务层,返回不同的页面

            响应式布局等同于流动网格布局,而自适应等同于使用固定分割点来进行布局.

            自适应布局给出了更多的设计空间,只用考虑几种不同的状态就可以了;
            而响应式布局要考虑上百种不同的状态,虽然有些状态差异较小,但也要考虑到
        3)响应式布局开发实现方法
            a)媒体查询
            b)百分比布局
            c)rem布局(相对于根节点(元素)html中的字号布局)
            d)视口单位布局(vm/vh)
        4)响应式设计步骤
            a)设置meta标签
            b)通过媒体查询来设置样式
            c)设置多种视图的宽度
                i)宽度需要使用百分比/rem/vm$vh等
                ii)处理图片缩放
                iii)其他属性处理
                    如pre/iframe/video等,都要缩放其大小,table,建议不要增加padding属性,低分辨率下要使用内容居中操作

    23.媒体查询
        步骤:
            1)设置meta标签  
                <meta name="viewport" content="width=device-width,initial-scale=1.0,maximum-scale=1.00,user-scalable=no"

                说明:
                    以上标签的内容只能被移动设备识别
                    viewport:视口(移动端)
                    width=device-width:宽度等于当前设备的宽度.
                    initial-scale=1.0:初始缩放比例(默认为1)
                    minimum-scale=1.0:允许用户缩放到的最小比例(默认为1.0)
                    maximum-scale=1.0:允许用户缩放到的最大比例(默认为1.0)
                    user-scalable=no:用户是否可以手动缩放(默认为no)

            2)设置IE渲染方式默认为最高版本  
                <meta http-equiv="x-ua-compatible" content="IE=Edge,chrome=1"
                
                说明:
                    以上代码表示如果浏览器有chrome插件,将以chrome提供的V8引擎渲染页面;
                    如果没有,将以IE的最高版本渲染页面.

            3)引入兼容的JS文件
            <!--[if It IE 9]>
                <script src="https://maxcdn.cm/libs/html5shiv/3.7.0/html5shiv.js"></script>
                <script src="https://maxcdn.cm/libs/responed.js//responed.min.js"></script>
            <![endif]-->

            说明:
                因为IE8及IE8以下版本既不支持HTML5,也不支持CSS3 Media,所以我们需要加载JS文件来处理这个兼容.
                上面的代码是一个注释语句,也就是说,IE9及以上的版本不会编译这几行代码.
            
            4)进入CSS3提供的媒体查询    
                a)引入外部CSS文件时使用
                    <link rel="stylesheet href="css/screen480.css" media="screen and (max-width:480px)">
                        如果屏宽为480px及以下,将加载screen480.css文件.
                    <link rel="stylesheet href="css/screen800.css" media="screen and (min-width:480px) and (max-width:800px)">
                        如果屏宽为480px以上且在800px以下,将加载screen800.css文件.
                    <link rel="stylesheet href="css/screengt800.css" media="screen and (min-width:800px)">
                        如果屏宽为800px以上,将加载screengt800.css文件.

                    设备:
                        all:所有设备
                        screen:PC端显示器
                        print:打印机或打印预览图
                        handheld:便携设备
                        tv:电视
                        speech:音频合成器
                        braille:盲人点触设备
                        embossed:盲人打印机
                        projection:投影设备
                        tty:固定密度字母栅格设备

                        only:用来排除不支持媒体查询的浏览器
                b)在style标签中用@media定义
    
    24.Web字体
        开发者引入外部字体.

        语法:
            @font-face{
                font-family:自定义字体名;
                src:url(字体文件.tff") format("字体文件格式以处理浏览器兼容"),url(字体文件.woff) format(...),...;
            }

        说明:
            可以同时引入多个字体文件,字体一样,文件的扩展名不一样,目的是为了处理浏览器兼容.

            eg:
                @font-face{
                    font-family:"";
                    src: url('iconfont.eot?t=1585647107785'); /* IE9 */
                    src: url('iconfont.eot?t=1585647107785#iefix') format('embedded-opentype'), /* IE6-IE8 */
                    url('data:application/x-font-woff2;charset=utf-8;base64,d09GMgABAAAAAAScAAsAAAAACTAAAAROAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHEIGVgCDMgqFUIRIATYCJAMUCwwABCAFhG0HSBvUByMRNntQMpL9c4HDS8ZfIO5Y1qSPewjh3vAB27QtWuSZ/vo2fXsLTLhNHImbHhWRS+uQekS1pkLN/4wAWN79HjSSRpTtFiWRkDQt6GKw35w/YDthItSILHpUeG1zVEhfmm770vwGCJAh/ce9qpkTbD77Frc5FiaUC2BoAsWCe3Tawoq1gNhh7OIyngYIoK3ZQrdDbCooiGnrEIDuTlIECjGzuISN5Lo052gs+EBTHr6pywB2uH+P/rAUoCQRbWsiE1YKgXKePAmz/1m42yiQ9OcEAOYUwIAtAA7okeueBdhP28JKaTbHCQBouVDY1zQD+VGe9P8/oXxF2lJ3A6qXf7wYlNLUihAfmOEg55kIoJAbIAAjj0AAQp4kvTFqLjpCA3zgDUA5jWbqk7gCgfCglsLnjxoEvf7vpje0oLt3F5OHdZtux5oKq7tpOrySajri1iEiO6STVnUnjMhcxDXiBu2eEesDm0U1Izot2jUNYlR+cl5lJU1LqxEuryFEViWkFlb1mtJSUlnJVhGniHQ1CSoHExQkFTGZ2l6armQK6moFgspO2HT2rijdXNot6iApFt+7l97P27vuGLGNurI7wq46wbzOXrZPNlDebyitLq+RVbGVEklNrFkqKK3UqhWWVWW/T1QkFXU360iY+pZDU1pldaygtLcIE4pgwpQ673cL1tw4h0pBTiJdFBFX+gIOAt9y1q8h1d4B5Xg4BM3m58aLPffM0x5PV5q3PWjMwsMnOTtO6MdoxBxU9wr8ODiopKFlUnKLfkriyRfSDL4znjylm5OX0F7frBRRIkMYHiKWY99sVcq+OygDjyESnsvz9XNdVltal/yMZdDWQFNBdoxge2GqkmGRKI2yVGL4zbuDMsxDt0AI/Uwx0TnU1GbHpwNpnA3uvbw9npBmpKt+dHQVWUqWQMjaa3sPG281uvTp5lWErtrbLhltNT4Maf6CPwa+3x2K0dU/fPxPvkjYdN3yWcJmCtrjIw5GvJusuP4B7KyYfAfLwAEA4P8H3IwtXS6LjTDLPU49xcHZUXwDJ/0yy9icsS5Q8f2tQK5V38M+B4xC/1kOtBO/d43akh9EUrODI8s0CzcWW02x6OX63lo1JfWVwG/hV/e0H62wdjUAkluEQMmsAMtt0Bz8Drgqe+DJHYG2FXGamCwALIgLwNpGAIHeCIRaP4j0rqBj/BNILH2GVB+G0hnp9a8kzHO9LaMSjCD4AxdSpg2b9LzaE5oyURyVuZwbcuFiMLZ3TOaOmCH3saP4mImIBs2UwgE8D5OEIGfyGMrAiuSboQOT902DkNJKTwiGFIEiIPAHOCGS0XZv0Uv9/gkySgmFS9pKwjeIFdzkYGxgVAN9VGe12s5lduHDmBBC41UaIylwgE6U6GkC8vxFHgqJAdsimdsYom66rnowvja9xmMA0LSruAGFMOIgLuIBfqqs/XPK2e8Wbe9UJlQ2LKVYqQAAAA==') format('woff2'),
                    url('iconfont.woff?t=1585647107785') format('woff'),
                    url('iconfont.ttf?t=1585647107785') format('truetype'), /* chrome, firefox, opera, Safari, Android, iOS 4.2+ */
                    url('iconfont.svg?t=1585647107785#iconfont') format('svg'); /* iOS 4.1- */
                }
    
    25.iconfont图标字体
        由阿里巴巴提供的一种图标字体.
        步骤:
            1)进入官网http://iconfont.cn
            2)创建一个项目
            3)添加图标到购物车
            4)将购物车中的图标添加到项目中
            5)下载iconfont文件,解压后,将部分文件复制到我的网页项目中
            6)使用字体图标,先引入iconfont.css文件
            7)使用图标方法:
                a)用类名
                    <div class="iconfont icongerenzhongxin"></div>
                b)用unicode值(微信小程序开发不支持这种写法)
                    <div class="iconfont">&#xe62f;</div>
